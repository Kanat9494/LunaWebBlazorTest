@inject NavigationManager Navigation
@inject IConfiguration Configuration
@rendermode InteractiveServer


@if (_cultures != null)
{
    <div class="row">
        <select class="form-select mb-2 selectpicker" @onchange="OnRequestCultureChanged" value="@_selectedCulture">
            @foreach (var culture in _cultures)
            {
                <option value="@culture.Key">@culture.Value</option>
            }
        </select>
    </div>

}


@code {
    private string _selectedCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
    private Dictionary<string, string> _cultures;


    protected override void OnInitialized()
    {
        _cultures = Configuration.GetSection("Cultures")
            .GetChildren().ToDictionary(x => x.Key, x => x.Value);
    }


    public void OnRequestCultureChanged(ChangeEventArgs args)
    {
        _selectedCulture = args.Value.ToString();
        if (string.IsNullOrWhiteSpace(_selectedCulture))
        {
            return;
        }
        // var uri = new Uri(NavigationManager.Uri)
        //     .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        // var query = $"?culture={Uri.EscapeDataString(_selectedCulture)}&" +
        //     $"redirectUri={Uri.EscapeDataString(uri)}";

        // NavigationManager.NavigateTo("/Culture/SetCulture" + query, forceLoad: true);

        var uri = new Uri(Navigation.Uri)
                    .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
        var cultureEscaped = Uri.EscapeDataString(_selectedCulture);
        var uriEscaped = Uri.EscapeDataString(uri);

        Navigation.NavigateTo(
                    $"/Culture/SetCulture?culture={cultureEscaped}&redirectUri={uriEscaped}",
                    forceLoad: true);
    }
}